@page "/register"
@using BlazorReport.Shared
@inject HttpClient Http
@inject NavigationManager nav

<div class="container d-flex flex-column justify-content-center align-items-center mt-lg-5">
	<h3 class="text-center mb-4">Sign Up</h3>

	<p class="text-danger text-center">@message</p>
	<p class="text-center"><a href="/login" class="text-muted">Already have an account? Log in</a></p>

	<EditForm Model="reg" OnValidSubmit="OnValid" style="max-width: 400px; width: 100%;">
		<DataAnnotationsValidator />
		<ValidationSummary />

		<div class="mb-3">
			<InputText class="form-control" @bind-Value="reg.email" placeholder="Enter Email" />
		</div>
		<div class="mb-3">
			<InputText type="password" class="form-control" @bind-Value="reg.password" placeholder="Enter Password" />
		</div>
		<div class="mb-3">
			<InputText type="password" class="form-control" @bind-Value="reg.confirmpwd" placeholder="Confirm Password" />
		</div>
		<div class="mb-3 text-center">
			<button class="btn btn-primary w-100" disabled="@isDisabled">Sign Up</button>
		</div>
	</EditForm>
</div>



@code {
	RegModel reg = new RegModel();
	string message = string.Empty, login = string.Empty;
	bool isDisabled = false;

	private async Task OnValid()
	{
		isDisabled = true;
		using (var msg = await Http.PostAsJsonAsync<RegModel>("/api/auth/register", reg, System.Threading.CancellationToken.None))
		{
			if (msg.IsSuccessStatusCode)
			{
				LoginResult result = await msg.Content.ReadFromJsonAsync<LoginResult>();
				message = result.message;
				if (result.success)
				{
					nav.NavigateTo("/login");
				}
				else
					isDisabled = false;
			}
		}
	}
}